#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ThingSpeak.h>
#define DHTPIN D1 // Pin connected to DHT11 data 
pin
#define DHTTYPE DHT11 // DHT sensor type
#define MOISTURE_PIN D0 // Pin connected to 
moisture sensor analog output
#define GAS_PIN D6 // Pin connected to gas sensor 
analog output
WiFiClient client;
// Wi-Fi credentials
const char* ssid = "your_network_ssid";
const char* password = "your_network_password";
// ThingSpeak credentials and channel ID
const char* server = "api.thingspeak.com";
const char* apiKey = "your_thingspeak_api_key";
const unsigned long channelID = your_channel_id;
// Initialize the DHT sensor
DHT dht(DHTPIN, DHTTYPE);
// LED pin assignments
const int TEMP_LED_PIN = D2; // Temperature 
LED pin
const int HUMIDITY_LED_PIN = D3; // Humidity 
LED pin
const int MOISTURE_LED_PIN = D4; // Moisture 
LED pin
const int GAS_LED_PIN = D5; // Gas LED pin
// Threshold values for LEDs
const float TEMP_THRESHOLD = 40.0; // 
Temperature threshold in °C
const float HUMIDITY_THRESHOLD = 60.0; // 
Humidity threshold in %
const int MOISTURE_THRESHOLD = 1500; // 
Moisture threshold
const int GAS_THRESHOLD = 1500; // Gas 
threshold
void setup() {
 // Start the serial communication
 Serial.begin(9600);
 // Initialize the DHT sensor
 dht.begin();
 // Connect to Wi-Fi
 WiFi.begin(ssid, password);
 while (WiFi.status() != WL_CONNECTED) {
 delay(1000);
 Serial.println("Connecting to WiFi...");
 }
 Serial.println("Connected to WiFi!");
 // Initialize ThingSpeak
 ThingSpeak.begin(client);
 // Initialize LED pins as outputs
 pinMode(TEMP_LED_PIN, OUTPUT);
 pinMode(HUMIDITY_LED_PIN, OUTPUT);
 pinMode(MOISTURE_LED_PIN, OUTPUT);
 pinMode(GAS_LED_PIN, OUTPUT);
}
void loop() {
 // Read temperature and humidity from DHT11
 float temperature = dht.readTemperature();
 float humidity = dht.readHumidity();
// Read moisture level from the moisture sensor
 int moistureLevel = 
analogRead(MOISTURE_PIN);
 // Read gas value from the gas sensor
 int gasValue = analogRead(GAS_PIN);
 // Print the readings to serial monitor
 Serial.print("Temperature: ");
 Serial.print(temperature);
 Serial.println(" °C");
 Serial.print("Humidity: ");
 Serial.print(humidity);
 Serial.println(" %");
 Serial.print("Moisture Level: ");
 Serial.println(moistureLevel);
 Serial.print("Gas Value: ");
 Serial.println(gasValue);
 // Send data to ThingSpeak
 ThingSpeak.setField(1, temperature);
 ThingSpeak.setField(2, humidity);
 ThingSpeak.setField(3, moistureLevel);
 ThingSpeak.setField(4, gasValue);
 int response = ThingSpeak.writeFields(channelID, 
apiKey);
 if (response == 200) {
 Serial.println("Data sent to ThingSpeak!");
 } else {
 Serial.print("Error sending data to ThingSpeak. 
Response code: ");
 Serial.println(response);
 }
 // Check if threshold is crossed for each parameter 
and control LEDs
 digitalWrite(TEMP_LED_PIN, temperature > 
TEMP_THRESHOLD ? HIGH : LOW);
 digitalWrite(HUMIDITY_LED_PIN, humidity > 
HUMIDITY_THRESHOLD ? HIGH : LOW);
 digitalWrite(MOISTURE_LED_PIN, 
moistureLevel > MOISTURE_THRESHOLD ? 
HIGH : LOW);
 digitalWrite(GAS_LED_PIN, gasValue > 
GAS_THRESHOLD ? HIGH : LOW);
 delay(2000); // Delay for 2 seconds before taking 
the next readings
}
